
@article{govardovskii_search_2000,
	title = {In search of the visual pigment template},
	volume = {17},
	issn = {1469-8714, 0952-5238},
	url = {https://www.cambridge.org/core/journals/visual-neuroscience/article/in-search-of-the-visual-pigment-template/A4738E821720092B7F5A233C4AB4962B},
	doi = {10.1017/S0952523800174036},
	abstract = {Absorbance spectra were recorded by microspectrophotometry 
from 39 different rod and cone types representing amphibians, 
reptiles, and fishes, with A1- or A2-based visual pigments 
and λmax ranging from 357 to 620 nm. The 
purpose was to investigate accuracy limits of putative 
universal templates for visual pigment absorbance spectra, 
and if possible to amend the templates to overcome the 
limitations. It was found that (1) the absorbance spectrum 
of frog rhodopsin extract very precisely parallels that 
of rod outer segments from the same individual, with only 
a slight hypsochromic shift in λmax, hence 
templates based on extracts are valid for absorbance in 
situ; (2) a template based on the bovine rhodopsin 
extract data of Partridge and De Grip (1991) describes 
the absorbance of amphibian rod outer segments excellently, 
contrary to recent electrophysiological results; (3) the 
λmax/λ invariance of spectral shape 
fails for A1 pigments with small λmax and 
for A2 pigments with large λmax, but the 
deviations are systematic and can be readily incorporated 
into, for example, the Lamb (1995) template. We thus propose 
modified templates for the main “α-band” 
of A1 and A2 pigments and show that these describe both 
absorbance and spectral sensitivities of photoreceptors 
over the whole range of λmax. Subtraction 
of the α-band from the full absorbance spectrum leaves 
a “β-band” described by a λmax-dependent 
Gaussian. We conclude that the idea of universal templates 
(one for A1- and one for A2-based visual pigments) remains 
valid and useful at the present level of accuracy of data 
on photoreceptor absorbance and sensitivity. The sum of 
our expressions for the α- and β-band gives a good 
description for visual pigment spectra with λmax 
{\textgreater} 350 nm.},
	language = {en},
	number = {4},
	urldate = {2023-07-25},
	journal = {Visual Neuroscience},
	author = {Govardovskii, Victor I. and Fyhrquist, Nanna and Reuter, Tom and Kuzmin, Dmitry G. and Donner, Kristian},
	month = jul,
	year = {2000},
	note = {Publisher: Cambridge University Press},
	keywords = {Absorbance, Photoreceptors, Retina, Rhodopsin, Spectral sensitivity},
	pages = {509--528},
	file = {Full Text PDF:/home/daniel/Zotero/storage/SLQIA7VM/Govardovskii et al. - 2000 - In search of the visual pigment template.pdf:application/pdf},
}

@article{vehtari_practical_2017,
	title = {Practical {Bayesian} model evaluation using leave-one-out cross-validation and {WAIC}},
	volume = {27},
	issn = {0960-3174, 1573-1375},
	url = {http://link.springer.com/10.1007/s11222-016-9696-4},
	doi = {10.1007/s11222-016-9696-4},
	language = {en},
	number = {5},
	urldate = {2023-09-12},
	journal = {Statistics and Computing},
	author = {Vehtari, Aki and Gelman, Andrew and Gabry, Jonah},
	month = sep,
	year = {2017},
	pages = {1413--1432},
	file = {Full Text PDF:/home/daniel/Zotero/storage/7QUDBKQK/Vehtari et al. - 2017 - Practical Bayesian model evaluation using leave-on.pdf:application/pdf},
}

@article{gabry_visualization_2019,
	title = {Visualization in {Bayesian} {Workflow}},
	volume = {182},
	issn = {0964-1998, 1467-985X},
	url = {https://academic.oup.com/jrsssa/article/182/2/389/7070184},
	doi = {10.1111/rssa.12378},
	abstract = {Bayesian data analysis is about more than just computing a posterior distribution, and Bayesian visualization is about more than trace plots of Markov chains. Practical Bayesian data analysis, like all data analysis, is an iterative process of model building, inference, model checking and evaluation, and model expansion. Visualization is helpful in each of these stages of the Bayesian workﬂow and it is indispensable when drawing inferences from the types of modern, high dimensional models that are used by applied researchers.},
	language = {en},
	number = {2},
	urldate = {2023-09-12},
	journal = {Journal of the Royal Statistical Society Series A: Statistics in Society},
	author = {Gabry, Jonah and Simpson, Daniel and Vehtari, Aki and Betancourt, Michael and Gelman, Andrew},
	month = feb,
	year = {2019},
	pages = {389--402},
	file = {Gabry et al. - 2019 - Visualization in Bayesian Workflow.pdf:/home/daniel/Zotero/storage/829DHDJI/Gabry et al. - 2019 - Visualization in Bayesian Workflow.pdf:application/pdf},
}

@Manual{cmdstanrManual,
  title = {cmdstanr: R Interface to 'CmdStan'},
  author = {Jonah Gabry and Rok Češnovar},
  year = {2022},
  note = {Version 0.5.3},
  url = {https://mc-stan.org/cmdstanr/, https://discourse.mc-stan.org},
}

@Manual{stanManual,
  title = {Stan Modeling Language Users Guide and Reference Manual},
  author = {{Stan Development Team}},
  year = {2023},
  note = {Version 2.32.2},
  url = {https://mc-stan.org},
}

@article{carpenter_stan_2017,
	title = {Stan: {A} {Probabilistic} {Programming} {Language}},
	volume = {76},
	url = {https://www.jstatsoft.org/index.php/jss/article/view/v076i01},
	doi = {10.18637/jss.v076.i01},
	abstract = {Stan is a probabilistic programming language for specifying statistical models. A Stan program imperatively defines a log probability function over parameters conditioned on specified data and constants. As of version 2.14.0, Stan provides full Bayesian inference for continuous-variable models through Markov chain Monte Carlo methods such as the No-U-Turn sampler, an adaptive form of Hamiltonian Monte Carlo sampling. Penalized maximum likelihood estimates are calculated using optimization methods such as the limited memory Broyden-Fletcher-Goldfarb-Shanno algorithm. Stan is also a platform for computing log densities and their gradients and Hessians, which can be used in alternative algorithms such as variational Bayes, expectation propagation, and marginal inference using approximate integration. To this end, Stan is set up so that the densities, gradients, and Hessians, along with intermediate quantities of the algorithm such as acceptance probabilities, are easily accessible. Stan can be called from the command line using the cmdstan package, through R using the rstan package, and through Python using the pystan package. All three interfaces support sampling and optimization-based inference with diagnostics and posterior analysis. rstan and pystan also provide access to log probabilities, gradients, Hessians, parameter transforms, and specialized plotting.},
	number = {1},
	journal = {Journal of Statistical Software},
	author = {Carpenter, Bob and Gelman, Andrew and Hoffman, Matthew D. and Lee, Daniel and Goodrich, Ben and Betancourt, Michael and Brubaker, Marcus and Guo, Jiqiang and Li, Peter and Riddell, Allen},
	year = {2017},
	pages = {1--32},
}